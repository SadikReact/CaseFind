{"version":3,"sources":["views/apps/freshlist/accounts/RoleList.js"],"names":["i","RoleList","state","rowData","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","params","className","render","history","size","color","onClick","push","pathname","data","_id","localStorage","setItem","runthisfunction","cellRendererFramework","pdfName","pdf","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","PDF","catch","error","console","log","id","selectedData","this","getSelectedRows","swal","buttons","cancel","text","value","updateRowData","remove","delete","sm","to","type","tag","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","contextType","UserContext"],"mappings":"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","file":"static/js/239.6a35a489.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {  Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n  \r\n  state = {\r\n    rowData: [],\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n            <Route\r\n                  render={({ history }) => (\r\n                  \r\n                    <Edit\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"blue\"\r\n                      onClick={() =>\r\n                       { history.push({\r\n                          pathname: `/app/CaseFinder/pdflist/editpdf/${params?.data._id}`,\r\n                          data: params.data,\r\n                        })\r\n                      localStorage.setItem(\"PDFID\",params.data._id)}\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n           \r\n            \r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data._id);\r\n                  }}\r\n                />\r\n          \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"PDF Name\",\r\n        field: \"pdfName\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n      return (\r\n             <span>{params.data?.pdfName }</span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Uploded Pdf\",\r\n        field: \"PDFFile\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data?.pdf}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n    \r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig\r\n    .get(\"/pdf/view-pdf\")\r\n    .then((response) => {\r\n     this.setState({ rowData: response?.data?.PDF });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.delete(`/pdf/delete-pdf/${id}`).then((response) => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n \r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 className=\"float-left\">Pdf List</h1>\r\n                \r\n              </Col>\r\n              <div className=\"text-end \">\r\n\r\n                <Link to=\"/app/CaseFinder/pdf/addPdf\"><button type=\"button\" className=\"btn btn-primary\">Add PDF  </button></Link>\r\n                  </div>\r\n   \r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Hub Name\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Order Id\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n"],"sourceRoot":""}